<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/task  
						http://www.springframework.org/schema/task/spring-task-3.0.xsd
						http://www.springframework.org/schema/aop  
           				http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 引入jdbc配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<context:component-scan base-package="com.encrm">
        <!--将Controller的注解排除掉 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
	
	
	<task:annotation-driven/>  

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <property name="driverClassName" value="${driver}" />
	  <property name="url" value="${url}" />
	  <property name="username" value="${username}" />
	  <property name="password" value="${password}" />
	  <!-- 连接池启动时的初始值 -->
	  <property name="initialSize" value="30" />
	  <!-- 连接池的最大值 -->
	  <property name="maxActive" value="1000" />
	  <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
	  <property name="maxIdle" value="50" />
	  <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
	  <property name="minIdle" value="30" />
	  <!--#给出一条简单的sql语句进行验证-->
	  <property name="validationQuery" value="select 1" />
	  <!--#在取出连接时进行有效验证-->
	  <property name="testOnBorrow" value="true" />
	  <property name="removeAbandonedTimeout" value="120" />
	  <property name="removeAbandoned" value="true" />
	  <!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
	  <property name="timeBetweenEvictionRunsMillis" value="3600000" />
	  <!-- #连接的超时时间，默认为半小时。 -->
	  <property name="minEvictableIdleTimeMillis" value="3600000" />  
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 以下两个类为配置表服务. -->
    <bean id="cfgSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="cfgDataAccess" class="com.encrm.publics.dao.DataAccessImpl" >
		
		<constructor-arg index="0" ref="cfgSqlSessionFactory" />
	</bean>
	
	<bean id="springUtil" class="com.encrm.publics.util.ContextUtil" depends-on="cfgDataAccess">
		<property name="configPath" value="config.properties,jdbc.properties" />
	</bean>
	
	<!-- 引引用外部配置文件信息 -->
	<import resource="applicationContext-ehcache.xml"/>
	<import resource="applicationContext-quartz.xml"/>
	
</beans>  